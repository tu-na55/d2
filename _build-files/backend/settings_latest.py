"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# simple JWT: 日付・時刻操作モジュール
# from datetime import timedelta

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "jk-9*=ro@=8)&k!f1&lz+#^*7sf0ki((=$ipsn7p_i*a0ec7&_"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # add modules
    "drf_yasg",
    "djoser",
    "rest_framework",
    "corsheaders",
    # 'sample.apps.SampleConfig',
    # 'api.apps.ApiConfig',
    "core",
]

REST_FRAMEWORK = {
    ####################
    # swagger
    # old
    # "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.coreapi.AutoSchema"
    # use drf_yasg
    "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.AllowAny",],
    ####################
    # JWTの有効化
    # use rest_framework_jwt
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.IsAuthenticated",),
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_jwt.authentication.JSONWebTokenAuthentication",
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.BasicAuthentication",
    ),
    # simple JWT
    # "DEFAULT_AUTHENTICATION_CLASSES": [
    #     "rest_framework_simplejwt.authentication.JWTAuthentication"
    # ],
    ####################
    # debug
    # utils.py: custom_exception_handler()
    # 'EXCEPTION_HANDLER': 'd.todos.utils.custom_exception_handler'
}
# Simple JWTの設定
SIMPLE_JWT = {
    # トークンをJWTに設定
    "AUTH_HEADER_TYPES": ("JWT",),
    # トークンの持続時間の設定
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),
}

MIDDLEWARE = [
    # cors: topに置く
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]
# MIDDLEWARE直下に追加
CORS_ORIGIN_WHITELIST = [
    "http://localhost:3000",
    # 'http://127.0.0.1:3000',
]
# すべて許可
# CORS_ORIGIN_ALLOW_ALL = True

# レスポンスを公開する
# クロスサイトHTTP要求にCookieを含めることが許可される。
# CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        # production
        "DIRS": [],
        # development
        # 'DIRS': [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        # 改行して実行するとユーザ生成に失敗する
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

# change
LANGUAGE_CODE = "ja"
# change
TIME_ZONE = "Asia/Tokyo"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = "/static/"

# STATIC_URLの直下に追加
# 今回作成するアプリは画像を取り扱うため MEDIA_URL と MEDIA_ROOT も記述しています。
MEDIA_URL = "/media/"  # 追加
MEDIA_ROOT = os.path.join(BASE_DIR, "media")  # 追加

####################
# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR, 'static'),
# )
# LOGIN_URL = 'admin:login'
# LOGOUT_REDIRECT_URL = '/'

# DEFAULT_FROM_EMAIL = "@gmail.com"
